{"version":3,"sources":["Feedback/Statistics/Statistics.module.css","Feedback/FeedbackOptions.module.css","Feedback/Notification/Notification.module.css","Feedback/FeedbackOptions.js","Feedback/Notification/Notification.js","Feedback/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","optionsList","map","option","optionItem","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","list","listItem","App","useState","setGood","setNeutral","setBad","state","Error","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,+B,kBCA7DD,EAAOC,QAAU,CAAC,YAAc,qCAAqC,WAAa,sC,iBCAlFD,EAAOC,QAAU,CAAC,QAAU,gC,+JCGb,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC/C,OACI,oBAAIC,UAAWC,IAAEC,YAAjB,SACIJ,EAAQK,KAAI,SAAAC,GAAM,OACf,oBAAiBJ,UAAWC,IAAEI,WAA9B,SACK,wBAAQC,KAAK,SAASC,QAAS,kBAAMR,EAAgBK,IAArD,SAA+DA,KAD3DA,Q,oCCLT,SAASI,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QAClC,OACI,mBAAGT,UAAWC,IAAEQ,QAAhB,SAA0BA,ICAnB,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC5D,OACI,sBAAKf,UAAU,aAAf,UACI,4CAECc,EAAQ,EACH,qBAAId,UAAWC,IAAEe,KAAjB,UACE,6BAAI,oBAAGhB,UAAWC,IAAEgB,SAAhB,mBAAiCN,OACrC,6BAAI,oBAAGX,UAAWC,IAAEgB,SAAhB,sBAAoCL,OACxC,6BAAI,oBAAGZ,UAAWC,IAAEgB,SAAhB,kBAAgCJ,OACpC,6BAAI,oBAAGb,UAAWC,IAAEgB,SAAhB,oBAAkCH,OACtC,6BAAI,oBAAGd,UAAWC,IAAEgB,SAAhB,gCAA8CF,EAA9C,YAEN,cAACP,EAAD,CAAcC,QAAQ,yBCsCzBS,MAnDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNR,EADM,KACAS,EADA,OAEiBD,mBAAS,GAF1B,mBAENP,EAFM,KAEGS,EAFH,OAGSF,mBAAS,GAHlB,mBAGNN,EAHM,KAGDS,EAHC,KAgCb,OACE,sBAAKtB,UAAU,MAAf,UACE,uDACA,cAACH,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAhCiB,SAAAK,GACrB,OAAQA,GACN,IAAK,OACHgB,GAAQ,SAAAG,GAAK,OAAIA,EAAQ,KACzB,MAEF,IAAK,UACHF,GAAW,SAAAE,GAAK,OAAIA,EAAQ,KAC5B,MAEF,IAAK,MACHD,GAAO,SAAAC,GAAK,OAAIA,EAAQ,KACxB,MAEF,QACE,MAAM,IAAIC,MAAJ,iCAAoCpB,QAoB5C,cAACM,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAnBGH,EAAOC,EAAUC,EAoBpBE,mBAhBGU,KAAKC,MAAOf,GAAQA,EAAOC,EAAUC,GAAQ,WC7BxDc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1cba2bae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__5AWYM\",\"listItem\":\"Statistics_listItem__2oJWW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsList\":\"FeedbackOptions_optionsList__1amIO\",\"optionItem\":\"FeedbackOptions_optionItem__ckGWF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__ySwTy\"};","import PropTypes from 'prop-types';\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n    return (\r\n        <ul className={s.optionsList}>\r\n           {options.map(option => (\r\n               <li key={option} className={s.optionItem}>\r\n                    <button type='button' onClick={() => onLeaveFeedback(option)}>{option}</button>\r\n                </li> \r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport s from \"./Notification.module.css\";\r\n\r\nexport default function Notification({message}) {\r\n    return (\r\n        <p className={s.message}>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport s from \"./Statistics.module.css\";\r\nimport Notification from '../Notification/Notification'\r\n\r\n\r\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n    return (\r\n        <div className=\"Statistics\">            \r\n            <h2>Statistics</h2>\r\n            \r\n            {total > 0\r\n                ? <ul className={s.list}>\r\n                    <li><p className={s.listItem}>Good: {good}</p></li>\r\n                    <li><p className={s.listItem}>Neutral: {neutral}</p></li>\r\n                    <li><p className={s.listItem}>Bad: {bad}</p></li>\r\n                    <li><p className={s.listItem}>Total: {total}</p></li>\r\n                    <li><p className={s.listItem}>Positive feedback: {positivePercentage}%</p></li>\r\n                </ul>\r\n                : <Notification message=\"No feedback given\"></Notification>\r\n            }\r\n        </div>\r\n    )\r\n            \r\n}\r\n\r\nStatistics.propTypes = {\r\n    good:PropTypes.number.isRequired,\r\n    neutral:PropTypes.number.isRequired,\r\n    bad:PropTypes.number.isRequired,\r\n    total:PropTypes.number.isRequired,\r\n    positivePercentage:PropTypes.number.isRequired,\r\n}","import { useState } from 'react';\nimport './App.css';\nimport FeedbackOptions from './Feedback/FeedbackOptions';\nimport Statistics from './Feedback/Statistics/Statistics';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleFeedback = option => {\n    switch (option) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n\n      default:\n        throw new Error(`Unsuported option type ${option}`);\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / (good + neutral + bad)) * 100);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Please leave feedback</h1>\n      <FeedbackOptions\n        options={['good', 'neutral', 'bad']}\n        onLeaveFeedback={handleFeedback}\n      ></FeedbackOptions>\n\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={countTotalFeedback()}\n        positivePercentage={countPositiveFeedbackPercentage()}\n      ></Statistics>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}